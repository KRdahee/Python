"""
[while문] 조건으로 반복하는 방법 조건이 True이면 명령을 수행

"""

i = 5
while i > 0:
    print(i)
    i = i - 1
print("Launch!")

#While문 예시 1부터 4까지 더하기

i = 1
sum = 0
while i<5:
    sum = sum + i
    i = i + 1
print(sum) #10

#while문에서 조건이 항상 True라면?

#무한정 코드가 실행된다. --> 빠져나올 수 없는 무한루프에 빠진다.

i = 1
while i>0: #항상 True
    print(i)
i = i + 1 #1, 2, 3, 4...무한루트 발생 OOPS






#그래서 Break문을 사용한다.

#if문으로 조건을 걸어준 다음, break실행. 반복문을 탈출하는 역할!

i = 0
while True:
    print("knock")
    if i >= 3:
        break
    i = i + 1

#knock*4번만 출력된다.


"""
연습문제

조건에 따라 반복하고 싶다면? while!
조건에 의한 반복이 필요한 경우가 있습니다. 이런 경우에는 while을 이용해서 반복문을 만들어줍니다.

while 조건: : 조건이 True(참) 이면 while 내부의 명령들을 실행. (언제까지? 조건이 False가 될 때까지!)
예를 들어, i를 카운트다운 하는 상황인 경우, 다음과 같이 작성하면 5부터 1까지 숫자를 거꾸로 출력합니다.

"""
i = 1
while i < 11:
    print(i)
    i = i - 1



"""
연습문제

숙제를 밀린 당신, 10년형에 처합니다!
이곳은 코딩법정, 당신은 피의자의 자리에 앉아 있습니다.
죄목은 '파이썬태만죄', 다른 바쁜 일로 인해 파이썬을 소홀히 한 죄입니다.
오만가지 생각이 들고 있을때, 귀도 반 로섬 판사님께서 판결을 내리고 있습니다!

“익숙함에 속아 소중한 것을 잃어버리다니, 딱하다! 징역 10년형에 처한다!”

while문을 이용해서 10년형을 살고, 새 사람이 되어 나와봅시다!

출력결과

1 년째 수감 중입니다.
2 년째 수감 중입니다.
...
9 년째 수감 중입니다.
10 년째 수감 중입니다.
감옥에서 석방되었습니다!

"""

#while을 이용해서 "i 년째 수감중입니다."를 출력해봅시다.
#while문이 종료된 후에는, "감옥에서 석방되었습니다!"를 출력해봅시다.

year = 1

while year <= 10 :
    print(year, "년째 수감 중입니다.")
    year = year + 1
print("감옥에서 석방되었습니다!")

"""
연습문제

조건문을 빠져나오고 싶으면? break!
for문이나 while문을 사용하다가, 특정한 경우에 반복문을 강제로 종료해야하는 경우가 있습니다. 이런 경우에는 break를 이용해서 반복문을 탈출할 수 있습니다.

break : 반복문을 탈출한다.
break는 실행되는 즉시 반복문을 탈출하기 때문에, 보통 조건문과 함께 사용됩니다.

예를 들어, 0부터 9까지의 숫자를 출력하다가 숫자가 5이면 “i가 5입니다”라는 문장과 함께 반복문을 종료하는 코드를 다음과 같이 작성할 수 있습니다.

"""
for i in range(0, 10):
    if i == 5:
        print("i가 5입니다")
        break
    print(i)

#들여쓰기에 주의하세요! 들여쓰기를 어떻게 하느냐에 따라 실행 결과가 달라질 수 있습니다. 

i = 1
while True: 
    print(i)
    if i == 5:
        print("i가 5에요!")
        break
    i = i + 1

"""
연습문제

장바구니 프로그램 만들기
온라인에 있는 다양한 쇼핑몰에서는 구매할 물건을 담아둘 수 있는 장바구니 프로그램이 있습니다.

개수 제한도 없고 무제한으로 담을 수 있는 유사한 프로그램을 제작해보겠습니다

단, “구매”를 입력하면 입력은 종료되고 여태까지 담은 물건 리스트를 보여줘야합니다.

연필
이어폰
A4용지
건전지
구매

['연필', '이어폰', 'A4용지', '건전지']

break을 이용하여 제품을 계속 담을 수 있는 장바구니 프로그램을 만들어보세요!

"""

# 다음은 while True:를 이용하여 shopping_list에 제약없이 물건을 담을 수 있는 프로그램을 만들어보세요!
# '구매' 를 입력하면 입력된 shopping_list를 출력합니다
shopping_list = []

while True:
    product = input()

    if product == "구매":
        break
    else:
        shopping_list.append(product)


print(shopping_list)
# 단, while True: 부분은 수정하면 안됩니다.