[문자열 String]
1. 문자나 문자들을 늘어놓은 것, 큰 따옴표("")와 작은 따옴표('')로 구분한다.

'Hi guys!'
'3.14' #작은 따옴표 OK
"3.14" #큰 따옴표 OK

Assign String to a Variable 변수에 문자열 할당
변수에 문자열을 할당하는 것은 변수 이름 뒤에 등호와 문자열이 오는 방식으로 수행됩니다.

a = "Hello"
print(a)

실행결과
Hello

Multiline Strings 여러 줄 문자열
세 개의 따옴표를 사용하여 여러 줄 문자열을 변수에 할당할 수 있습니다.

a = """Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."""
print(a)

실행결과
Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua.

Strings are Arrays
Python의 문자열은 유니코드 문자를 나타내는 바이트 배열이다.
그러나 Python에는 문자 데이터 유형이 없으며 단일 문자는 단순히 길이가 1인 문자열입니다.
대괄호를 사용하여 문자열 요소에 액세스할 수 있습니다.

a = "Hello, World!"
print(a[1])

실행결과 
e

첫 번째 문자의 위치는 0부터 시작한다. 인덱스 넘버!

Looping Through a String
문자열은 배열이므로 루프를 사용하여 문자열의 문자를 반복할 수 있습니다.

for x in "banana":
  print(x)

실행결과
b
a
n
a
n
a

String Length 문자열 길이
문자열의 길이를 얻으려면 len()함수를 사용가능하다.

len()함수는 문자열의 길이를 반환한다.
a = "Hello, World!"
print(len(a))

실행결과
13

Check String 문자열 확인
문자열에 특정 문구나 문자가 있는지 확인하려면 in 키워드를 사용할 수 있습니다.

txt = "The best things in life are free!"
print("free" in txt)

실행결과
True

if 명령문을 추가한다면?

txt = "The best things in life are free!"
if "free" in txt:
  print("Yes, 'free' is present.")

실행결과  True이지만 내가 작성한 출력문을 출력한다.
Yes, 'free' is present.

Check if NOT 없는지 확인할 때
특정 문구나 문자가 문자열에 없는지 확인하려면 not in 키워드를 사용할 수 있습니다.

txt = "The best things in life are free!"
print("expensive" not in txt)

실행결과 True, expensive가 문장에 없기때문에이다.
True 

if 명령문을 추가한다면?

txt = "The best things in life are free!"
if "expensive" not in txt:
  print("No, 'expensive' is NOT present.")

실행결과
No, 'expensive' is NOT present.
